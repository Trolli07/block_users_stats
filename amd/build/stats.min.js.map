{"version":3,"file":"stats.min.js","sources":["../src/stats.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Changes the display of directories and files into a tree.\n *\n * @module      block_users_stats/stats.js\n * @copyright  2025 Olivier Piton\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\n\nexport const init = () => {\n    const usersContainer = document.getElementById('block-users-stats-users-items');\n    const enrolmentsContainer = document.getElementById('block-users-stats-enrolments-items');\n\n    if (!usersContainer || !enrolmentsContainer) {\n        return;\n    }\n\n    const containerMapping = {\n        total_users: usersContainer,\n        active_users: usersContainer,\n        courses_views: enrolmentsContainer,\n        enrolments: enrolmentsContainer\n    };\n\n    Ajax.call([{\n        methodname: 'block_users_stats_get_statistics',\n        args: {}\n    }])[0]\n    .then(response =>renderStats(response, containerMapping))\n    .catch(err => Notification.exception(err));\n};\n\n/**\n * Render all the statistics items.\n *\n * @param {Object} response - The response data containing statistics\n * @param {Object} containerMapping - Mapping of stat keys to DOM containers\n */\nfunction renderStats(response, containerMapping) {\n    Object.entries(response).forEach(([key, item]) => {\n        const container = containerMapping[key];\n        if (!container) {\n            return;\n        }\n        Templates.render('block_users_stats/item', item)\n        .then(html => Templates.appendNodeContents(container, html, ''))\n        .catch(err => Notification.exception(err));\n    });\n}"],"names":["usersContainer","document","getElementById","enrolmentsContainer","containerMapping","total_users","active_users","courses_views","enrolments","call","methodname","args","then","response","Object","entries","forEach","_ref","key","item","container","render","html","Templates","appendNodeContents","catch","err","Notification","exception","renderStats"],"mappings":";;;;;;;sOA2BoB,WACVA,eAAiBC,SAASC,eAAe,iCACzCC,oBAAsBF,SAASC,eAAe,0CAE/CF,iBAAmBG,iCAIlBC,iBAAmB,CACrBC,YAAaL,eACbM,aAAcN,eACdO,cAAeJ,oBACfK,WAAYL,mCAGXM,KAAK,CAAC,CACPC,WAAY,mCACZC,KAAM,MACN,GACHC,MAAKC,mBAUWA,SAAUT,kBAC3BU,OAAOC,QAAQF,UAAUG,SAAQC,WAAEC,IAAKC,iBAC9BC,UAAYhB,iBAAiBc,KAC9BE,8BAGKC,OAAO,yBAA0BF,MAC1CP,MAAKU,MAAQC,mBAAUC,mBAAmBJ,UAAWE,KAAM,MAC3DG,OAAMC,KAAOC,sBAAaC,UAAUF,UAlBxBG,CAAYhB,SAAUT,oBACtCqB,OAAMC,KAAOC,sBAAaC,UAAUF"}